datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    Int    @id @default(autoincrement())
  email String @unique
  name  String
  username String @unique
  Documents  Document[]
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
  ChatBoxes ChatBox[]
  Messages Message[]
}

model Document {
  id             Int    @id @default(autoincrement())
  title          String
  original_name  String
  topic          String
  userId         Int?
  file_size      Int
  user           User?  @relation(fields: [userId], references: [id])
  vdb            vdb[]
  createdAt      DateTime @default(now())
  updatedAt      DateTime? @updatedAt
  deletedAt      DateTime?
}

model vdb {
  id    Int @id @default(autoincrement())
  docId Int?
  documents   Document? @relation(fields: [docId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
}

model ChatBox {
  id        Int    @id @default(autoincrement())
  userId    Int?
  user      User?   @relation(fields: [userId], references: [id])
  name      String
  messages  Message[]
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
}

model Message {
  id        Int      @id @default(autoincrement())
  chatBoxId Int?
  chatBox   ChatBox?  @relation(fields: [chatBoxId], references: [id])
  userId    Int?
  user      User?     @relation(fields: [userId], references: [id])
  request   String
  response  String
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
}
