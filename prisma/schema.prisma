datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         String     @id
  email      String
  username   String
  first_name String
  last_name  String
  img_url    String
  Documents  Document[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime?  @updatedAt
  deletedAt  DateTime?
  ChatBoxes  ChatBox[]
  Messages   Message[]
}

model Document {
  id            Int       @id @default(autoincrement())
  title         String
  original_name String
  topic         String
  userId        String?
  file_size     Int
  user          User?     @relation(fields: [userId], references: [id])
  vdb           vdb[]
  public        Boolean?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt
  deletedAt     DateTime?
}

model vdb {
  id        Int       @id @default(autoincrement())
  docId     Int?
  documents Document? @relation(fields: [docId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
}

model ChatBox {
  id        Int       @id @default(autoincrement())
  userId    String?
  user      User?     @relation(fields: [userId], references: [id])
  name      String
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
}

model Message {
  id            Int       @id @default(autoincrement())
  chatBoxId     Int?
  chatBox       ChatBox?  @relation(fields: [chatBoxId], references: [id])
  userId        String?
  user          User?     @relation(fields: [userId], references: [id])
  request       String
  response      String
  rating        Int?
  disliked      Boolean?
  liked         Boolean?
  response_time Int?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt
  deletedAt     DateTime?
}
